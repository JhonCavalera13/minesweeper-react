[{"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\index.js":"1","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\MinesweeperApp.js":"2","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Board.js":"3","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Cell.js":"4","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Timer.js":"5","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Modal.js":"6","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Circle.js":"7","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\utils\\mineColors.js":"8","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\utils\\createBoard.js":"9","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\utils\\reveal.js":"10"},{"size":264,"mtime":1608491169437,"results":"11","hashOfConfig":"12"},{"size":1640,"mtime":1608605713272,"results":"13","hashOfConfig":"12"},{"size":4079,"mtime":1608605105957,"results":"14","hashOfConfig":"12"},{"size":1870,"mtime":1608602542697,"results":"15","hashOfConfig":"12"},{"size":650,"mtime":1608605485148,"results":"16","hashOfConfig":"12"},{"size":619,"mtime":1608601911123,"results":"17","hashOfConfig":"12"},{"size":405,"mtime":1608491025188,"results":"18","hashOfConfig":"12"},{"size":166,"mtime":1608491311248,"results":"19","hashOfConfig":"12"},{"size":2732,"mtime":1608489794617,"results":"20","hashOfConfig":"12"},{"size":4598,"mtime":1608491102364,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19chqv5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\index.js",[],["44","45"],"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\MinesweeperApp.js",[],"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Board.js",["46","47"],"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Cell.js",[],"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Timer.js",["48"],"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Modal.js",[],"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\components\\Circle.js",[],"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\utils\\mineColors.js",[],"C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\utils\\createBoard.js",["49"],"export default (row, col, bombs) => {\r\n    let board = [];\r\n    let mineLocation = [];\r\n    // Create blank board\r\n\r\n    // x = column\r\n    for (let x = 0; x < row; x++) {\r\n        let subCol = [];\r\n        for (let y = 0; y < col; y++) {\r\n            subCol.push({\r\n                value: 0,\r\n                revealed: false,\r\n                x,\r\n                y,\r\n                flagged: false,\r\n            });\r\n        }\r\n        board.push(subCol);\r\n    }\r\n\r\n    // Randomize Bomb Placement\r\n    let bombsCount = 0;\r\n    while (bombsCount < bombs) {\r\n        let x = randomNum(0, row - 1);\r\n        let y = randomNum(0, col - 1);\r\n\r\n        if (board[x][y].value === 0) {\r\n            board[x][y].value = \"X\";\r\n            mineLocation.push([x, y]);\r\n            bombsCount++;\r\n        }\r\n    }\r\n\r\n    // Add Numbers\r\n    for (let roww = 0; roww < row; roww++) {\r\n        for (let coll = 0; coll < col; coll++) {\r\n            if (board[roww][coll].value === \"X\") {\r\n                continue;\r\n            }\r\n\r\n            // Top\r\n            if (roww > 0 && board[roww - 1][coll].value === \"X\") {\r\n                board[roww][coll].value++;\r\n            }\r\n\r\n            // Top Right\r\n            if (\r\n                roww > 0 &&\r\n                coll < col - 1 &&\r\n                board[roww - 1][coll + 1].value === \"X\"\r\n            ) {\r\n                board[roww][coll].value++;\r\n            }\r\n\r\n            // Right\r\n            if (coll < col - 1 && board[roww][coll + 1].value === \"X\") {\r\n                board[roww][coll].value++;\r\n            }\r\n\r\n            // Botoom Right\r\n            if (\r\n                roww < row - 1 &&\r\n                coll < col - 1 &&\r\n                board[roww + 1][coll + 1].value === \"X\"\r\n            ) {\r\n                board[roww][coll].value++;\r\n            }\r\n\r\n            // Bottom\r\n            if (roww < row - 1 && board[roww + 1][coll].value === \"X\") {\r\n                board[roww][coll].value++;\r\n            }\r\n\r\n            // Bottom Left\r\n            if (\r\n                roww < row - 1 &&\r\n                coll > 0 &&\r\n                board[roww + 1][coll - 1].value === \"X\"\r\n            ) {\r\n                board[roww][coll].value++;\r\n            }\r\n\r\n            // LEft\r\n            if (coll > 0 && board[roww][coll - 1].value === \"X\") {\r\n                board[roww][coll].value++;\r\n            }\r\n\r\n            // Top Left\r\n            if (roww > 0 && coll > 0 && board[roww - 1][coll - 1].value === \"X\") {\r\n                board[roww][coll].value++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return { board, mineLocation };\r\n};\r\n\r\nfunction randomNum(min = 0, max) {\r\n    // min and max included\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}","C:\\Users\\jonat\\OneDrive\\Documents\\proyectos\\minesweeper-react\\src\\utils\\reveal.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":19,"column":8,"nodeType":"56","endLine":19,"endColumn":25,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":108,"column":1,"nodeType":"60","messageId":"61","endLine":123,"endColumn":24},{"ruleId":"62","severity":1,"message":"63","line":2,"column":5,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","endLine":96,"endColumn":3},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'freshBoard'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'timeIntervalId' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [row, col, bombs, freshBoard]",{"range":"74","text":"75"},[621,638],"[row, col, bombs, freshBoard]"]